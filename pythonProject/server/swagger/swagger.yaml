swagger: "2.0"
info:
  description: "Api animal"
  version: "1.0.0"
  title: "Swagger animal"
  contact:
    email: "aquinopedro36@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "{{host_with_port}}"
basePath: "/v1"
tags:
  - name: "configuracoes"
    description: "Operações de configuração do microserviço"
  - name: "usuario"
    description: "Operações do usuario do microserviço"
  - name: "instituicao"
    description: "Operações da instituicao do microserviço"
  - name: "admin"
    description: "Operaçoes do Administrador da Instituicao"
  - name: "postagem"
    description: "Operaçoes de Postagem"
schemes:
  - "https"
  - "http"
paths:
  /ping:
    get:
      tags:
        - "configuracoes"
      summary: "Api keepalive"
      description: "Api keepalive"
      operationId: "get_alive"
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "pong response"
      x-swagger-router-controller: "server.controllers.keepalive_controller"
  /usuario:
    post:
      tags:
        - "usuario"
      operationId: "post_usuario"
      summary: "Adicionar um usuario"
      description: "Adicionar um usuario"
      consumes:
        - application/json
      parameters:
        - name: "body"
          in: "body"
          required: true
          description: "Corpo da requisição"
          schema:
            $ref: "#/definitions/UsuarioDTO"
      responses:
        200:
          description: "Usuario criado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.usuario_controller"
    get:
      tags:
        - "usuario"
      operationId: "get_all_usuario"
      summary: "Lista usuario"
      description: "Lista usuario"
      produces:
        - "application/json"
      responses:
        200:
          description: "Retorna uma lista com todos os usuario"
          schema:
            $ref: "#/definitions/UsuarioPaginado"
        204:
          description: "Quando não há usuario na base de dados"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.usuario_controller"
  /instituicao:
    post:
      tags:
        - "instituicao"
      operationId: "post_instituicao"
      summary: "Adicionar uma Instituição"
      description: "Adicionar uma Instituição"
      consumes:
        - application/json
      parameters:
        - name: "body"
          in: "body"
          required: true
          description: "Corpo da requisição"
          schema:
            $ref: "#/definitions/InstituicaoDTO"
      responses:
        200:
          description: "instituição criado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.instituicao_controller"
    get:
      tags:
        - "instituicao"
      operationId: "get_all_instituicao"
      summary: "Lista instituicao"
      description: "Lista instituicao"
      produces:
        - "application/json"
      responses:
        200:
          description: "Retorna uma lista com todas as instituiçoes"
          schema:
            $ref: "#/definitions/InstituicaoPaginado"
        204:
          description: "Quando não há instituicao na base de dados"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.instituicao_controller"
  /instituicao/{id}:
    put:
      tags:
        - "instituicao"
      operationId: "put_instituicao"
      summary: "Atualiza Instituicao por id"
      description: "Atualiza Instituicao por id"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID do registro que será atualizado"
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          required: false
          description: "Corpo da requisicao"
          schema:
            $ref: "#/definitions/InstituicaoDTO"
      responses:
        200:
          description: "Insituicao atualizado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.instituicao_controller"
  /adm:
    post:
      tags:
        - "adm"
      operationId: "post_adm_instituicao"
      summary: "Adicionar um Administrador"
      description: "Adicionar um Administrador"
      consumes:
        - application/json
      parameters:
        - name: "body"
          in: "body"
          required: true
          description: "Corpo da requisição"
          schema:
            $ref: "#/definitions/AdminDTO"
      responses:
        200:
          description: "Admin criado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.instituicao_controller"
    get:
      tags:
        - "adm"
      operationId: "get_all_adm_instituicao"
      summary: "Lista Administrador"
      description: "Lista Administrador"
      produces:
        - "application/json"
      responses:
        200:
          description: "Retorna uma lista com todos os Administradores"
          schema:
            $ref: "#/definitions/AdminPaginado"
        204:
          description: "Quando não há Administrador na base de dados"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.instituicao_controller"
  /adm/{id}:
    put:
      tags:
        - "adm"
      operationId: "put_adm_instituicao"
      summary: "Atualiza Administrador por id"
      description: "Atualiza Administrador por id"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID do registro que será atualizado"
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          required: false
          description: "Corpo da requisicao"
          schema:
            $ref: "#/definitions/AdminDTO"
      responses:
        200:
          description: "Administrador atualizado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.instituicao_controller"
  /postagem:
    post:
      tags:
        - "postagem"
      operationId: "post_postagem"
      summary: "Adicionar uma postagem"
      description: "Adicionar uma postagem"
      consumes:
        - application/json
      parameters:
        - name: "body"
          in: "body"
          required: true
          description: "Corpo da requisição"
          schema:
            $ref: "#/definitions/PostagemDTO"
      responses:
        200:
          description: "Postagem criado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.postagem_controller"
    get:
      tags:
        - "postagem"
      operationId: "get_all_postagem"
      summary: "Lista Postagens"
      description: "Lista Postagens"
      produces:
        - "application/json"
      responses:
        200:
          description: "Retorna uma lista com todas as Postagens"
          schema:
            $ref: "#/definitions/PostagemPaginado"
        204:
          description: "Quando não há mural na base de dados"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.postagem_controller"
  /postagem/{id}:
    put:
      tags:
        - "postagem"
      operationId: "put_postagem"
      summary: "Atualiza Postagem por id"
      description: "Atualiza Postagem por id"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID do registro que será atualizado"
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          required: false
          description: "Corpo da requisicao"
          schema:
            $ref: "#/definitions/PostagemDTO"
      responses:
        200:
          description: "Postagem atualizado com sucesso"
        500:
          description: "Erro no servidor"
      x-swagger-router-controller: "server.controllers.postagem_controller"
definitions:
  Paginado:
    type: object
    properties:
      page:
        type: integer
        example: 2
      has_next:
        type: boolean
        example: false
      has_prev:
        type: boolean
        example: true
      next_num:
        type: integer
        example: 3
      pages:
        type: integer
        example: 100
      per_page:
        type: integer
        example: 50
      prev_num:
        type: integer
        example: 2
      total:
        type: integer
        example: 5000
  Usuario:
    type: "object"
    properties:
      nome:
        type: "string"
        x-nullable: true
      cpf:
        type: "string"
        x-nullable: true
      dt_nasc:
        type: "string"
        x-nullable: true
      email:
        type: "string"
        x-nullable: true
      telefone:
        type: "string"
        x-nullable: true
      senha:
        type: "string"
        x-nullable: true
  UsuarioDTO:
    type: "object"
    properties:
      nome:
        type: "string"
        x-nullable: true
      cpf:
        type: "string"
        x-nullable: true
      dt_nasc:
        type: "string"
        example: 2020-12-12
        x-nullable: true
      email:
        type: "string"
        x-nullable: true
      telefone:
        type: "string"
        x-nullable: true
      senha:
        type: "string"
        x-nullable: true
  UsuarioPaginado:
    allOf:
      - $ref: '#/definitions/Paginado'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Usuario'
  Instituicao:
    type: "object"
    properties:
      nome:
        type: "string"
        x-nullable: true
      cnpj:
        type: "string"
        x-nullable: true
      dt_criacao:
        type: "string"
        example: 2020-12-15
        x-nullable: true
      telefone:
        type: "string"
        x-nullable: true
      endereco:
        type: "string"
        x-nullable: true
      email:
        type: "string"
        x-nullable: true
      descricao:
        type: "string"
        x-nullable: true
      senha:
        type: "string"
        x-nullable: true
  InstituicaoDTO:
    type: "object"
    properties:
      nome:
        type: "string"
        x-nullable: true
      cnpj:
        type: "string"
        x-nullable: true
      dt_criacao:
        type: "string"
        example: 2020-12-12
        x-nullable: true
      telefone:
        type: "string"
        x-nullable: true
      endereco:
        type: "string"
        x-nullable: true
      email:
        type: "string"
        x-nullable: true
      descricao:
        type: "string"
        x-nullable: true
      senha:
        type: "string"
        x-nullable: true
  InstituicaoPaginado:
    allOf:
      - $ref: '#/definitions/Paginado'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Instituicao'
  Admin:
    type: "object"
    properties:
      nome:
        type: "string"
        x-nullable: true
      cpf:
        type: "string"
        x-nullable: true
      dt_nasc:
        type: "string"
        format: date
        example: 2020-12-12
      email:
        type: "string"
        x-nullable: true
      telefone:
        type: "string"
        x-nullable: true
      cargo:
        type: "string"
        x-nullable: true
      id_instituicao:
        type: integer
        example: 1
        x-nullable: true
      senha:
        type: "string"
        x-nullable: true
  AdminDTO:
    type: "object"
    properties:
      nome:
        type: "string"
        x-nullable: true
      cpf:
        type: "string"
        x-nullable: true
      dt_nasc:
        type: "string"
        format: date
        example: 2020-12-12
        x-nullable: true
      email:
        type: "string"
        x-nullable: true
      telefone:
        type: "string"
        x-nullable: true
      cargo:
        type: "string"
        x-nullable: true
      id_instituicao:
        type: integer
        example: 1
        x-nullable: true
      senha:
        type: "string"
        x-nullable: true
  AdminPaginado:
    allOf:
      - $ref: '#/definitions/Paginado'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Admin'
  Postagem:
    type: "object"
    properties:
      animal:
        type: "string"
        x-nullable: true
      descricao:
        type: "string"
        x-nullable: true
      cor:
        type: "string"
        x-nullable: true
      dt_desaparecimento:
        type: "string"
        format: date
        example: 2020-12-12
      id_mural:
        type: integer
        example: 1
        x-nullable: true
  PostagemDTO:
    type: "object"
    properties:
      animal:
        type: "string"
        x-nullable: true
      descricao:
        type: "string"
        x-nullable: true
      cor:
        type: "string"
        x-nullable: true
      dt_desaparecimento:
        type: "string"
        format: date
        example: 2020-12-12
      id_mural:
        type: integer
        example: 1
        x-nullable: true
  PostagemPaginado:
    allOf:
      - $ref: '#/definitions/Paginado'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Postagem'
